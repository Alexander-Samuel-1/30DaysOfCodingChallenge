The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.


#include <iostream>
#include <vector>

// Function to find majority element
int findMajorityElement(const std::vector<int>& nums) {
    int majorityCandidate = nums[0];
    int count = 1;

    // Iterate through numbers to find majority candidate
    for (int i = 1; i < nums.size(); ++i) {
        if (count == 0) {
            majorityCandidate = nums[i];
            count = 1;
        } else if (majorityCandidate == nums[i]) {
            count += 1;
        } else {
            count -= 1;
        }
    }

    return majorityCandidate;
}

int main() {
    std::vector<int> numbers = {2, 2, 1, 1, 1, 2, 2};
    int result = findMajorityElement(numbers);
    std::cout << "Majority Element: " << result << std::endl;
    return 0;
}
