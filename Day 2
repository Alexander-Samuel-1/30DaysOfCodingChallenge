You are given a 0-indexed 2D integer matrix grid of size n * n with values in the range [1, n2]. Each integer appears exactly once except a which appears twice and b which is missing. The task is to find the repeating and missing numbers a and b.

Return a 0-indexed integer array ans of size 2 where ans[0] equals to a and ans[1] equals to b.

 
def find_duplicate_and_missing(grid):
    n = len(grid)
    frequency = [0] * (n * n + 1)
    duplicate = missing = 0

    # Count occurrences
    for row in grid:
        for num in row:
            frequency[num] += 1

    # Find duplicate and missing
    for i in range(1, n * n + 1):
        if frequency[i] == 0:
            missing = i
        elif frequency[i] > 1:
            duplicate = i

    return [duplicate, missing]
